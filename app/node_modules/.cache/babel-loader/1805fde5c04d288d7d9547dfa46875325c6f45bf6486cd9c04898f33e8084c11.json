{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useParams,Link}from'react-router-dom';import'./index.css';// Import the CSS file\nimport'./light.css';import'./dark.css';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";function ProblemSubmissions(_ref){let{token,setGlobalLoading}=_ref;// Accept setGlobalLoading prop\nconst{problemId}=useParams();const[allSubmissions,setAllSubmissions]=useState([]);// Store all fetched submissions\nconst[submissions,setSubmissions]=useState([]);// Submissions to display after filtering\nconst[error,setError]=useState(null);const[filterUserId,setFilterUserId]=useState('');const[filterStatus,setFilterStatus]=useState('');const[filterStartDate,setFilterStartDate]=useState('');const[filterEndDate,setFilterEndDate]=useState('');useEffect(()=>{const fetchSubmissions=async()=>{setGlobalLoading(true);// Use global loading\ntry{const response=await fetch(\"\".concat(process.env.REACT_APP_API_BASE_URL,\"/api/problems/\").concat(problemId,\"/submissions\"),{headers:{'Authorization':\"Bearer \".concat(token)}});if(!response.ok){throw new Error(\"HTTP error! status: \".concat(response.status));}const data=await response.json();setAllSubmissions(data);// Store all submissions\nsetSubmissions(data);// Initially display all submissions\n}catch(error){setError(error);}finally{setGlobalLoading(false);// Use global loading\n}};if(problemId&&token){fetchSubmissions();}},[problemId,token]);useEffect(()=>{let filtered=allSubmissions;if(filterUserId){filtered=filtered.filter(submission=>submission.user_id.toLowerCase().includes(filterUserId.toLowerCase()));}if(filterStatus){filtered=filtered.filter(submission=>submission.status.toLowerCase()===filterStatus.toLowerCase());}if(filterStartDate){const start=new Date(filterStartDate).getTime();filtered=filtered.filter(submission=>new Date(submission.timestamp).getTime()>=start);}if(filterEndDate){const end=new Date(filterEndDate).getTime();filtered=filtered.filter(submission=>new Date(submission.timestamp).getTime()<=end);}setSubmissions(filtered);},[allSubmissions,filterUserId,filterStatus,filterStartDate,filterEndDate]);if(error){return/*#__PURE__*/_jsxs(\"div\",{className:\"problem-submissions-error\",children:[\"Error: \",error.message]});}// Extract unique statuses and languages for filter options\nconst statuses=[...new Set(allSubmissions.map(s=>s.status))];// const languages = [...new Set(allSubmissions.map(s => s.language))];\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"problem-submissions-container\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Submissions for Problem: \",problemId]}),/*#__PURE__*/_jsxs(\"div\",{className:\"problem-submissions-filters\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Filter by User ID...\",value:filterUserId,onChange:e=>setFilterUserId(e.target.value),className:\"problem-submissions-filter-input\"}),/*#__PURE__*/_jsxs(\"select\",{value:filterStatus,onChange:e=>setFilterStatus(e.target.value),className:\"problem-submissions-filter-select\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"All Statuses\"}),statuses.map(s=>/*#__PURE__*/_jsx(\"option\",{value:s,children:s},s))]}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:filterStartDate,onChange:e=>setFilterStartDate(e.target.value),className:\"problem-submissions-filter-input\",title:\"Filter by Start Date\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:filterEndDate,onChange:e=>setFilterEndDate(e.target.value),className:\"problem-submissions-filter-input\",title:\"Filter by End Date\"})]}),submissions.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"problem-submissions-no-submissions\",children:\"No submissions found for this problem.\"}):/*#__PURE__*/_jsx(\"ul\",{className:\"problem-submissions-list\",children:submissions.map(submission=>/*#__PURE__*/_jsx(\"li\",{className:\"problem-submissions-list-item\",children:/*#__PURE__*/_jsxs(Link,{to:\"/submissions/\".concat(submission.submission_id),children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Submission ID:\"}),\" \",submission.submission_id]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"User ID:\"}),\" \",submission.user_id]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Status:\"}),\" \",submission.status]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Timestamp:\"}),\" \",new Date(submission.timestamp).toLocaleString()]}),submission.test_results&&/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Test Results:\"}),\" \",submission.test_results.filter(tr=>tr.status==='passed').length,\" / \",submission.test_results.length,\" passed\"]})]})},submission.submission_id))})]});}export default ProblemSubmissions;","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","jsxs","_jsxs","jsx","_jsx","ProblemSubmissions","_ref","token","setGlobalLoading","problemId","allSubmissions","setAllSubmissions","submissions","setSubmissions","error","setError","filterUserId","setFilterUserId","filterStatus","setFilterStatus","filterStartDate","setFilterStartDate","filterEndDate","setFilterEndDate","fetchSubmissions","response","fetch","concat","process","env","REACT_APP_API_BASE_URL","headers","ok","Error","status","data","json","filtered","filter","submission","user_id","toLowerCase","includes","start","Date","getTime","timestamp","end","className","children","message","statuses","Set","map","s","type","placeholder","value","onChange","e","target","title","length","to","submission_id","toLocaleString","test_results","tr"],"sources":["E:/NEW/frontend-for-annaforces/app/src/components/ProblemSubmissions/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport './index.css'; // Import the CSS file\nimport './light.css';\nimport './dark.css';\n\nfunction ProblemSubmissions({ token, setGlobalLoading }) { // Accept setGlobalLoading prop\n  const { problemId } = useParams();\n  const [allSubmissions, setAllSubmissions] = useState([]); // Store all fetched submissions\n  const [submissions, setSubmissions] = useState([]); // Submissions to display after filtering\n  const [error, setError] = useState(null);\n  const [filterUserId, setFilterUserId] = useState('');\n  const [filterStatus, setFilterStatus] = useState('');\n  const [filterStartDate, setFilterStartDate] = useState('');\n  const [filterEndDate, setFilterEndDate] = useState('');\n\n  useEffect(() => {\n    const fetchSubmissions = async () => {\n      setGlobalLoading(true); // Use global loading\n      try {\n        const response = await fetch(`${process.env.REACT_APP_API_BASE_URL}/api/problems/${problemId}/submissions`, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setAllSubmissions(data); // Store all submissions\n        setSubmissions(data);    // Initially display all submissions\n      } catch (error) {\n        setError(error);\n      } finally {\n        setGlobalLoading(false); // Use global loading\n      }\n    };\n\n    if (problemId && token) {\n      fetchSubmissions();\n    }\n  }, [problemId, token]);\n\n  useEffect(() => {\n    let filtered = allSubmissions;\n\n    if (filterUserId) {\n      filtered = filtered.filter(submission =>\n        submission.user_id.toLowerCase().includes(filterUserId.toLowerCase())\n      );\n    }\n\n    if (filterStatus) {\n      filtered = filtered.filter(submission =>\n        submission.status.toLowerCase() === filterStatus.toLowerCase()\n      );\n    }\n\n    if (filterStartDate) {\n      const start = new Date(filterStartDate).getTime();\n      filtered = filtered.filter(submission =>\n        new Date(submission.timestamp).getTime() >= start\n      );\n    }\n\n    if (filterEndDate) {\n      const end = new Date(filterEndDate).getTime();\n      filtered = filtered.filter(submission =>\n        new Date(submission.timestamp).getTime() <= end\n      );\n    }\n\n    setSubmissions(filtered);\n  }, [allSubmissions, filterUserId, filterStatus, filterStartDate, filterEndDate]);\n\n  if (error) {\n    return <div className=\"problem-submissions-error\">Error: {error.message}</div>;\n  }\n\n  // Extract unique statuses and languages for filter options\n  const statuses = [...new Set(allSubmissions.map(s => s.status))];\n  // const languages = [...new Set(allSubmissions.map(s => s.language))];\n\n  return (\n    <div className=\"problem-submissions-container\">\n      <h2>Submissions for Problem: {problemId}</h2>\n      <div className=\"problem-submissions-filters\">\n        <input\n          type=\"text\"\n          placeholder=\"Filter by User ID...\"\n          value={filterUserId}\n          onChange={(e) => setFilterUserId(e.target.value)}\n          className=\"problem-submissions-filter-input\"\n        />\n        <select\n          value={filterStatus}\n          onChange={(e) => setFilterStatus(e.target.value)}\n          className=\"problem-submissions-filter-select\"\n        >\n          <option value=\"\">All Statuses</option>\n          {statuses.map(s => <option key={s} value={s}>{s}</option>)}\n        </select>\n        {/* <select\n          value={filterLanguage}\n          onChange={(e) => setFilterLanguage(e.target.value)}\n          className=\"problem-submissions-filter-select\"\n        >\n          <option value=\"\">All Languages</option>\n          {languages.map(l => <option key={l} value={l}>{l}</option>)}\n        </select> */}\n        <input\n          type=\"date\"\n          value={filterStartDate}\n          onChange={(e) => setFilterStartDate(e.target.value)}\n          className=\"problem-submissions-filter-input\"\n          title=\"Filter by Start Date\"\n        />\n        <input\n          type=\"date\"\n          value={filterEndDate}\n          onChange={(e) => setFilterEndDate(e.target.value)}\n          className=\"problem-submissions-filter-input\"\n          title=\"Filter by End Date\"\n        />\n      </div>\n      {submissions.length === 0 ? (\n        <div className=\"problem-submissions-no-submissions\">No submissions found for this problem.</div>\n      ) : (\n        <ul className=\"problem-submissions-list\">\n          {submissions.map(submission => (\n            <li key={submission.submission_id} className=\"problem-submissions-list-item\">\n              <Link to={`/submissions/${submission.submission_id}`}>\n                <p><strong>Submission ID:</strong> {submission.submission_id}</p>\n                <p><strong>User ID:</strong> {submission.user_id}</p>\n                <p><strong>Status:</strong> {submission.status}</p>\n                {/* <p><strong>Language:</strong> {submission.language}</p> */}\n                <p><strong>Timestamp:</strong> {new Date(submission.timestamp).toLocaleString()}</p>\n                {submission.test_results && (\n                  <p>\n                    <strong>Test Results:</strong> {submission.test_results.filter(tr => tr.status === 'passed').length} / {submission.test_results.length} passed\n                  </p>\n                )}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n)}\n\nexport default ProblemSubmissions;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}