{"ast":null,"code":"var _jsxFileName = \"E:\\\\NEW\\\\frontend-for-annaforces\\\\app\\\\src\\\\components\\\\Login\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './index.css'; // Import the CSS file\nimport './light.css';\nimport './dark.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login({\n  onLogin,\n  setIsLoading\n}) {\n  _s();\n  // Add setIsLoading prop\n  const [userId, setUserId] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setIsLoading(true); // Use global loading\n\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_BASE_URL}/api/auth/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user_id: userId,\n          password: password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        localStorage.setItem('user_id', data.user_id);\n        localStorage.setItem('username', data.username);\n        localStorage.setItem('name', data.name);\n        localStorage.setItem('token', data.token);\n        onLogin(data.user_id, data.username, data.name, data.token);\n        navigate('/welcome');\n      } else {\n        setError(data.error || 'Login failed');\n      }\n    } catch (err) {\n      setError('Network error or server is unreachable');\n      console.error('Login error:', err);\n    } finally {\n      setIsLoading(false); // Use global loading\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"login-title\",\n      children: \"Login \\uD83D\\uDD11\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"userId\",\n          className: \"login-label\",\n          children: \"User ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"userId\",\n          value: userId,\n          onChange: e => setUserId(e.target.value),\n          className: \"login-input\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          className: \"login-label\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          className: \"login-input\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"login-button\",\n        disabled: false,\n        children: [\" \", \"Login\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"login-error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"Yd0suHtvBqRpNWWxrGaknkV56ng=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","onLogin","setIsLoading","_s","userId","setUserId","password","setPassword","error","setError","navigate","handleSubmit","e","preventDefault","response","fetch","process","env","REACT_APP_API_BASE_URL","method","headers","body","JSON","stringify","user_id","data","json","ok","localStorage","setItem","username","name","token","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","disabled","_c","$RefreshReg$"],"sources":["E:/NEW/frontend-for-annaforces/app/src/components/Login/index.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './index.css'; // Import the CSS file\nimport './light.css';\nimport './dark.css';\n\nfunction Login({ onLogin, setIsLoading }) { // Add setIsLoading prop\n  const [userId, setUserId] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n    setIsLoading(true); // Use global loading\n\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_BASE_URL}/api/auth/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ user_id: userId, password: password }),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        localStorage.setItem('user_id', data.user_id);\n        localStorage.setItem('username', data.username);\n        localStorage.setItem('name', data.name);\n        localStorage.setItem('token', data.token);\n\n        onLogin(data.user_id, data.username, data.name, data.token);\n        navigate('/welcome');\n      } else {\n        setError(data.error || 'Login failed');\n      }\n    } catch (err) {\n      setError('Network error or server is unreachable');\n      console.error('Login error:', err);\n    } finally {\n      setIsLoading(false); // Use global loading\n    }\n  };\n\n  return (\n    <div className=\"login-container\">\n      <h2 className=\"login-title\">Login ðŸ”‘</h2>\n      <form onSubmit={handleSubmit}>\n        <div className=\"login-form-group\">\n          <label htmlFor=\"userId\" className=\"login-label\">User ID:</label>\n          <input\n            type=\"text\"\n            id=\"userId\"\n            value={userId}\n            onChange={(e) => setUserId(e.target.value)}\n            className=\"login-input\"\n            required\n          />\n        </div>\n        <div className=\"login-form-group\">\n          <label htmlFor=\"password\" className=\"login-label\">Password:</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            className=\"login-input\"\n            required\n          />\n        </div>\n        <button type=\"submit\" className=\"login-button\" disabled={false}> {/* Remove disabled based on local isLoading */}\n          Login\n        </button>\n        {error && <p className=\"login-error\">{error}</p>}\n      </form>\n    </div>\n  );\n}\n\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}