{"ast":null,"code":"var _jsxFileName = \"E:\\\\NEW\\\\frontend-for-annaforces\\\\app\\\\src\\\\components\\\\SolutionDetail\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport ReactMarkdown from 'react-markdown'; // Import ReactMarkdown\nimport './light.css'; // For component-specific styles\nimport './dark.css'; // For component-specific styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SolutionDetail = ({\n  setGlobalLoading\n}) => {\n  _s();\n  const {\n    problemId\n  } = useParams();\n  const [solutionData, setSolutionData] = useState(null);\n  const [error, setError] = useState(null);\n  const [showModal, setShowModal] = useState(false); // State to control modal visibility\n  const [selectedLanguage, setSelectedLanguage] = useState('python'); // State to control selected language in modal\n\n  useEffect(() => {\n    const fetchSolution = async () => {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setError('No token found. Please log in.');\n        if (setGlobalLoading) setGlobalLoading(false);\n        return;\n      }\n      if (setGlobalLoading) setGlobalLoading(true);\n      try {\n        const response = await fetch(`${process.env.REACT_APP_API_BASE_URL}/api/problems/${problemId}/solution`, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          const errorData = await response.json();\n          throw new Error(errorData.error || 'Failed to fetch solution');\n        }\n        const data = await response.json();\n        setSolutionData(data);\n\n        // Set default selected language if available\n        if (data.python) {\n          setSelectedLanguage('python');\n        } else if (data.cpp) {\n          setSelectedLanguage('cpp');\n        } else if (data.c) {\n          setSelectedLanguage('c');\n        }\n      } catch (err) {\n        setError(err.message);\n        console.error('Error fetching solution:', err);\n      } finally {\n        if (setGlobalLoading) setGlobalLoading(false);\n      }\n    };\n    if (problemId) {\n      fetchSolution();\n    }\n  }, [problemId, setGlobalLoading]);\n  const handleViewSolutionClick = () => {\n    setShowModal(true);\n  };\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n  const renderCodeBlock = language => {\n    const code = solutionData[language];\n    if (!code) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"No \", language, \" solution available.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 23\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: /*#__PURE__*/_jsxDEV(\"code\", {\n        className: `language-${language}`,\n        children: code.endsWith('\\n') ? code.slice(0, -1) : code\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  };\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"solution-detail-error\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 12\n    }, this);\n  }\n  if (!solutionData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"solution-detail-loading\",\n      children: \"Loading solution...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"solution-detail-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"solution-detail-title\",\n      children: [\"Solution for Problem \", problemId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"solution-detail-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"solution-detail-subtitle\",\n        children: \"Explanation (solution.md)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), solutionData.markdown ? /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n        children: solutionData.markdown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No markdown explanation available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"solution-detail-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleViewSolutionClick,\n        className: \"solution-detail-view-solution-button\",\n        children: \"View Author's Solution \\uD83D\\uDCA1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"solution-modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"solution-modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"solution-modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Author's Solution for Problem \", problemId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCloseModal,\n            className: \"solution-modal-close-button\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"solution-modal-tabs\",\n          children: [solutionData.python && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `solution-modal-tab ${selectedLanguage === 'python' ? 'active' : ''}`,\n            onClick: () => setSelectedLanguage('python'),\n            children: \"Python\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this), solutionData.cpp && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `solution-modal-tab ${selectedLanguage === 'cpp' ? 'active' : ''}`,\n            onClick: () => setSelectedLanguage('cpp'),\n            children: \"C++\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }, this), solutionData.c && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `solution-modal-tab ${selectedLanguage === 'c' ? 'active' : ''}`,\n            onClick: () => setSelectedLanguage('c'),\n            children: \"C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"solution-modal-code-display\",\n          children: [selectedLanguage === 'python' && renderCodeBlock('python'), selectedLanguage === 'cpp' && renderCodeBlock('cpp'), selectedLanguage === 'c' && renderCodeBlock('c')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/problems/${problemId}`,\n      className: \"solution-detail-back-link\",\n      children: \"Back to Problem\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(SolutionDetail, \"ez9p0s1O/UzjYnWHHpLR8ZmdlNU=\", false, function () {\n  return [useParams];\n});\n_c = SolutionDetail;\nexport default SolutionDetail;\nvar _c;\n$RefreshReg$(_c, \"SolutionDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","ReactMarkdown","jsxDEV","_jsxDEV","SolutionDetail","setGlobalLoading","_s","problemId","solutionData","setSolutionData","error","setError","showModal","setShowModal","selectedLanguage","setSelectedLanguage","fetchSolution","token","localStorage","getItem","response","fetch","process","env","REACT_APP_API_BASE_URL","headers","ok","errorData","json","Error","data","python","cpp","c","err","message","console","handleViewSolutionClick","handleCloseModal","renderCodeBlock","language","code","children","fileName","_jsxFileName","lineNumber","columnNumber","className","endsWith","slice","markdown","onClick","to","_c","$RefreshReg$"],"sources":["E:/NEW/frontend-for-annaforces/app/src/components/SolutionDetail/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport ReactMarkdown from 'react-markdown'; // Import ReactMarkdown\nimport './light.css'; // For component-specific styles\nimport './dark.css'; // For component-specific styles\n\nconst SolutionDetail = ({ setGlobalLoading }) => {\n  const { problemId } = useParams();\n  const [solutionData, setSolutionData] = useState(null);\n  const [error, setError] = useState(null);\n  const [showModal, setShowModal] = useState(false); // State to control modal visibility\n  const [selectedLanguage, setSelectedLanguage] = useState('python'); // State to control selected language in modal\n\n  useEffect(() => {\n    const fetchSolution = async () => {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setError('No token found. Please log in.');\n        if (setGlobalLoading) setGlobalLoading(false);\n        return;\n      }\n\n      if (setGlobalLoading) setGlobalLoading(true);\n      try {\n        const response = await fetch(`${process.env.REACT_APP_API_BASE_URL}/api/problems/${problemId}/solution`, {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n          },\n        });\n\n        if (!response.ok) {\n          const errorData = await response.json();\n          throw new Error(errorData.error || 'Failed to fetch solution');\n        }\n\n        const data = await response.json();\n        setSolutionData(data);\n\n        // Set default selected language if available\n        if (data.python) {\n          setSelectedLanguage('python');\n        } else if (data.cpp) {\n          setSelectedLanguage('cpp');\n        } else if (data.c) {\n          setSelectedLanguage('c');\n        }\n\n      } catch (err) {\n        setError(err.message);\n        console.error('Error fetching solution:', err);\n      } finally {\n        if (setGlobalLoading) setGlobalLoading(false);\n      }\n    };\n\n    if (problemId) {\n      fetchSolution();\n    }\n  }, [problemId, setGlobalLoading]);\n\n  const handleViewSolutionClick = () => {\n    setShowModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n\n  const renderCodeBlock = (language) => {\n    const code = solutionData[language];\n    if (!code) return <p>No {language} solution available.</p>;\n\n    return (\n      <pre><code className={`language-${language}`}>{ \n        code.endsWith('\\n') ? code.slice(0, -1) : code\n      }</code></pre>\n    );\n  };\n\n  if (error) {\n    return <div className=\"solution-detail-error\">Error: {error}</div>;\n  }\n\n  if (!solutionData) {\n    return <div className=\"solution-detail-loading\">Loading solution...</div>;\n  }\n\n  return (\n    <div className=\"solution-detail-container\">\n      <h2 className=\"solution-detail-title\">Solution for Problem {problemId}</h2>\n      \n      <div className=\"solution-detail-section\">\n        <h3 className=\"solution-detail-subtitle\">Explanation (solution.md)</h3>\n        {solutionData.markdown ? (\n          <ReactMarkdown>{solutionData.markdown}</ReactMarkdown>\n        ) : (\n          <p>No markdown explanation available.</p>\n        )}\n      </div>\n\n      <div className=\"solution-detail-actions\">\n        <button onClick={handleViewSolutionClick} className=\"solution-detail-view-solution-button\">\n          View Author's Solution 💡\n        </button>\n      </div>\n\n      {showModal && (\n        <div className=\"solution-modal-overlay\">\n          <div className=\"solution-modal-content\">\n            <div className=\"solution-modal-header\">\n              <h3>Author's Solution for Problem {problemId}</h3>\n              <button onClick={handleCloseModal} className=\"solution-modal-close-button\">×</button>\n            </div>\n            <div className=\"solution-modal-tabs\">\n              {solutionData.python && (\n                <button \n                  className={`solution-modal-tab ${selectedLanguage === 'python' ? 'active' : ''}`}\n                  onClick={() => setSelectedLanguage('python')}\n                >\n                  Python\n                </button>\n              )}\n              {solutionData.cpp && (\n                <button \n                  className={`solution-modal-tab ${selectedLanguage === 'cpp' ? 'active' : ''}`}\n                  onClick={() => setSelectedLanguage('cpp')}\n                >\n                  C++\n                </button>\n              )}\n              {solutionData.c && (\n                <button \n                  className={`solution-modal-tab ${selectedLanguage === 'c' ? 'active' : ''}`}\n                  onClick={() => setSelectedLanguage('c')}\n                >\n                  C\n                </button>\n              )}\n            </div>\n            <div className=\"solution-modal-code-display\">\n              {selectedLanguage === 'python' && renderCodeBlock('python')}\n              {selectedLanguage === 'cpp' && renderCodeBlock('cpp')}\n              {selectedLanguage === 'c' && renderCodeBlock('c')}\n            </div>\n          </div>\n        </div>\n      )}\n\n      <Link to={`/problems/${problemId}`} className=\"solution-detail-back-link\">Back to Problem</Link>\n    </div>\n  );\n};\n\nexport default SolutionDetail;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}