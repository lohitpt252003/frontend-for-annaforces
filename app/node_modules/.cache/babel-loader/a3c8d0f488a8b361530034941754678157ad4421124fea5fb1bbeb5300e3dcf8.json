{"ast":null,"code":"import _objectSpread from\"E:/NEW/frontend-for-annaforces/app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{useParams}from'react-router-dom';import'./index.css';// Import the CSS file\nimport'./light.css';import'./dark.css';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";function SubmissionDetail(_ref){let{token,setGlobalLoading}=_ref;// Accept setGlobalLoading prop\nconst{submissionId}=useParams();const[submissionData,setSubmissionData]=useState(null);const[error,setError]=useState(null);const[expandedTestCases,setExpandedTestCases]=useState({});useEffect(()=>{const fetchSubmissionData=async()=>{setGlobalLoading(true);// Use global loading\ntry{const response=await fetch(\"\".concat(process.env.REACT_APP_API_BASE_URL,\"/api/submissions/\").concat(submissionId),{headers:{'Authorization':\"Bearer \".concat(token)}});if(!response.ok){if(response.status===404){setError(new Error(\"The submission is not there.\"));}else{throw new Error(\"HTTP error! status: \".concat(response.status));}}const data=await response.json();setSubmissionData(data);// Initialize all test cases to be expanded by default\nconst initialExpandedState={};if(data.test_results){data.test_results.forEach(tr=>{initialExpandedState[tr.test_case_number]=true;});}setExpandedTestCases(initialExpandedState);}catch(error){setError(error);}finally{setGlobalLoading(false);// Use global loading\n}};if(submissionId&&token){fetchSubmissionData();}},[submissionId,token]);const toggleTestCase=testCaseNumber=>{setExpandedTestCases(prevState=>_objectSpread(_objectSpread({},prevState),{},{[testCaseNumber]:!prevState[testCaseNumber]}));};if(error){return/*#__PURE__*/_jsxs(\"div\",{className:\"submission-detail-error\",children:[\"Error: \",error.message]});}if(!submissionData){return/*#__PURE__*/_jsx(\"div\",{className:\"submission-detail-no-data\",children:\"No submission data found.\"});}return/*#__PURE__*/_jsxs(\"div\",{className:\"submission-detail-container\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Submission Details: \",submissionId]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Problem ID:\"}),\" \",submissionData.problem_id]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"User ID:\"}),\" \",submissionData.user_id]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Language:\"}),\" \",submissionData.language]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Status:\"}),\" \",submissionData.status]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Timestamp:\"}),\" \",new Date(submissionData.timestamp).toLocaleString()]}),/*#__PURE__*/_jsx(\"h3\",{children:\"Code:\"}),/*#__PURE__*/_jsx(\"pre\",{className:\"submission-detail-code-block\",children:/*#__PURE__*/_jsx(\"code\",{children:submissionData.code})}),/*#__PURE__*/_jsx(\"h3\",{children:\"Test Results:\"}),submissionData.test_results&&submissionData.test_results.length>0?/*#__PURE__*/_jsx(\"ul\",{className:\"submission-detail-test-results-list\",children:submissionData.test_results.map((testResult,index)=>/*#__PURE__*/_jsxs(\"li\",{className:\"submission-detail-test-results-list-item\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"test-case-header\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsxs(\"strong\",{children:[\"Test Case \",testResult.test_case_number,\":\"]}),\" \",testResult.status]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>toggleTestCase(testResult.test_case_number),className:\"test-case-toggle-button\",children:expandedTestCases[testResult.test_case_number]?'Collapse':'Expand'})]}),expandedTestCases[testResult.test_case_number]&&/*#__PURE__*/_jsxs(\"div\",{className:\"test-case-details\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Message:\"}),\" \",testResult.message]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Execution Time:\"}),\" \",testResult.execution_time,\" s\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Memory Usage:\"}),\" \",testResult.memory_usage,\" MB\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Expected Output:\"}),\" \",/*#__PURE__*/_jsx(\"pre\",{children:testResult.expected_output})]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Actual Output:\"}),\" \",/*#__PURE__*/_jsx(\"pre\",{children:testResult.actual_output})]})]})]},index))}):/*#__PURE__*/_jsx(\"p\",{children:\"No test results available.\"})]});}export default SubmissionDetail;","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxs","_jsxs","jsx","_jsx","SubmissionDetail","_ref","token","setGlobalLoading","submissionId","submissionData","setSubmissionData","error","setError","expandedTestCases","setExpandedTestCases","fetchSubmissionData","response","fetch","concat","process","env","REACT_APP_API_BASE_URL","headers","ok","status","Error","data","json","initialExpandedState","test_results","forEach","tr","test_case_number","toggleTestCase","testCaseNumber","prevState","_objectSpread","className","children","message","problem_id","user_id","language","Date","timestamp","toLocaleString","code","length","map","testResult","index","onClick","execution_time","memory_usage","expected_output","actual_output"],"sources":["E:/NEW/frontend-for-annaforces/app/src/components/SubmissionDetail/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './index.css'; // Import the CSS file\nimport './light.css';\nimport './dark.css';\n\nfunction SubmissionDetail({ token, setGlobalLoading }) { // Accept setGlobalLoading prop\n  const { submissionId } = useParams();\n  const [submissionData, setSubmissionData] = useState(null);\n  const [error, setError] = useState(null);\n  const [expandedTestCases, setExpandedTestCases] = useState({});\n\n  useEffect(() => {\n    const fetchSubmissionData = async () => {\n      setGlobalLoading(true); // Use global loading\n      try {\n        const response = await fetch(`${process.env.REACT_APP_API_BASE_URL}/api/submissions/${submissionId}`, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          if (response.status === 404) {\n            setError(new Error(\"The submission is not there.\"));\n          } else {\n            throw new Error(`HTTP error! status: ${response.status}`);\n          }\n        }\n        const data = await response.json();\n        setSubmissionData(data);\n\n        // Initialize all test cases to be expanded by default\n        const initialExpandedState = {};\n        if (data.test_results) {\n          data.test_results.forEach(tr => {\n            initialExpandedState[tr.test_case_number] = true;\n          });\n        }\n        setExpandedTestCases(initialExpandedState);\n\n      } catch (error) {\n        setError(error);\n      } finally {\n        setGlobalLoading(false); // Use global loading\n      }\n    };\n\n    if (submissionId && token) {\n      fetchSubmissionData();\n    }\n  }, [submissionId, token]);\n\n  const toggleTestCase = (testCaseNumber) => {\n    setExpandedTestCases(prevState => ({\n      ...prevState,\n      [testCaseNumber]: !prevState[testCaseNumber]\n    }));\n  };\n\n  if (error) {\n    return <div className=\"submission-detail-error\">Error: {error.message}</div>;\n  }\n\n  if (!submissionData) {\n    return <div className=\"submission-detail-no-data\">No submission data found.</div>;\n  }\n\n  return (\n    <div className=\"submission-detail-container\">\n      <h2>Submission Details: {submissionId}</h2>\n      <p><strong>Problem ID:</strong> {submissionData.problem_id}</p>\n      <p><strong>User ID:</strong> {submissionData.user_id}</p>\n      <p><strong>Language:</strong> {submissionData.language}</p>\n      <p><strong>Status:</strong> {submissionData.status}</p>\n      <p><strong>Timestamp:</strong> {new Date(submissionData.timestamp).toLocaleString()}</p>\n\n      <h3>Code:</h3>\n      <pre className=\"submission-detail-code-block\">\n        <code>{submissionData.code}</code>\n      </pre>\n\n      <h3>Test Results:</h3>\n      {submissionData.test_results && submissionData.test_results.length > 0 ? (\n        <ul className=\"submission-detail-test-results-list\">\n          {submissionData.test_results.map((testResult, index) => (\n            <li key={index} className=\"submission-detail-test-results-list-item\">\n              <div className=\"test-case-header\">\n                <p><strong>Test Case {testResult.test_case_number}:</strong> {testResult.status}</p>\n                <button onClick={() => toggleTestCase(testResult.test_case_number)} className=\"test-case-toggle-button\">\n                  {expandedTestCases[testResult.test_case_number] ? 'Collapse' : 'Expand'}\n                </button>\n              </div>\n              {expandedTestCases[testResult.test_case_number] && (\n                <div className=\"test-case-details\">\n                  <p><strong>Message:</strong> {testResult.message}</p>\n                  <p><strong>Execution Time:</strong> {testResult.execution_time} s</p>\n                  <p><strong>Memory Usage:</strong> {testResult.memory_usage} MB</p>\n                  <p><strong>Expected Output:</strong> <pre>{testResult.expected_output}</pre></p>\n                  <p><strong>Actual Output:</strong> <pre>{testResult.actual_output}</pre></p>\n                </div>\n              )}\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No test results available.</p>\n      )}\n    </div>\n  );\n}\n\nexport default SubmissionDetail;\n"],"mappings":"uHAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,SAAS,KAAQ,kBAAkB,CAC5C,MAAO,aAAa,CAAE;AACtB,MAAO,aAAa,CACpB,MAAO,YAAY,CAAC,OAAAC,IAAA,IAAAC,KAAA,CAAAC,GAAA,IAAAC,IAAA,yBAEpB,QAAS,CAAAC,gBAAgBA,CAAAC,IAAA,CAA8B,IAA7B,CAAEC,KAAK,CAAEC,gBAAiB,CAAC,CAAAF,IAAA,CAAI;AACvD,KAAM,CAAEG,YAAa,CAAC,CAAGT,SAAS,CAAC,CAAC,CACpC,KAAM,CAACU,cAAc,CAAEC,iBAAiB,CAAC,CAAGb,QAAQ,CAAC,IAAI,CAAC,CAC1D,KAAM,CAACc,KAAK,CAAEC,QAAQ,CAAC,CAAGf,QAAQ,CAAC,IAAI,CAAC,CACxC,KAAM,CAACgB,iBAAiB,CAAEC,oBAAoB,CAAC,CAAGjB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAE9DC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAiB,mBAAmB,CAAG,KAAAA,CAAA,GAAY,CACtCR,gBAAgB,CAAC,IAAI,CAAC,CAAE;AACxB,GAAI,CACF,KAAM,CAAAS,QAAQ,CAAG,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAIC,OAAO,CAACC,GAAG,CAACC,sBAAsB,sBAAAH,MAAA,CAAoBV,YAAY,EAAI,CACpGc,OAAO,CAAE,CACP,eAAe,WAAAJ,MAAA,CAAYZ,KAAK,CAClC,CACF,CAAC,CAAC,CACF,GAAI,CAACU,QAAQ,CAACO,EAAE,CAAE,CAChB,GAAIP,QAAQ,CAACQ,MAAM,GAAK,GAAG,CAAE,CAC3BZ,QAAQ,CAAC,GAAI,CAAAa,KAAK,CAAC,8BAA8B,CAAC,CAAC,CACrD,CAAC,IAAM,CACL,KAAM,IAAI,CAAAA,KAAK,wBAAAP,MAAA,CAAwBF,QAAQ,CAACQ,MAAM,CAAE,CAAC,CAC3D,CACF,CACA,KAAM,CAAAE,IAAI,CAAG,KAAM,CAAAV,QAAQ,CAACW,IAAI,CAAC,CAAC,CAClCjB,iBAAiB,CAACgB,IAAI,CAAC,CAEvB;AACA,KAAM,CAAAE,oBAAoB,CAAG,CAAC,CAAC,CAC/B,GAAIF,IAAI,CAACG,YAAY,CAAE,CACrBH,IAAI,CAACG,YAAY,CAACC,OAAO,CAACC,EAAE,EAAI,CAC9BH,oBAAoB,CAACG,EAAE,CAACC,gBAAgB,CAAC,CAAG,IAAI,CAClD,CAAC,CAAC,CACJ,CACAlB,oBAAoB,CAACc,oBAAoB,CAAC,CAE5C,CAAE,MAAOjB,KAAK,CAAE,CACdC,QAAQ,CAACD,KAAK,CAAC,CACjB,CAAC,OAAS,CACRJ,gBAAgB,CAAC,KAAK,CAAC,CAAE;AAC3B,CACF,CAAC,CAED,GAAIC,YAAY,EAAIF,KAAK,CAAE,CACzBS,mBAAmB,CAAC,CAAC,CACvB,CACF,CAAC,CAAE,CAACP,YAAY,CAAEF,KAAK,CAAC,CAAC,CAEzB,KAAM,CAAA2B,cAAc,CAAIC,cAAc,EAAK,CACzCpB,oBAAoB,CAACqB,SAAS,EAAAC,aAAA,CAAAA,aAAA,IACzBD,SAAS,MACZ,CAACD,cAAc,EAAG,CAACC,SAAS,CAACD,cAAc,CAAC,EAC5C,CAAC,CACL,CAAC,CAED,GAAIvB,KAAK,CAAE,CACT,mBAAOV,KAAA,QAAKoC,SAAS,CAAC,yBAAyB,CAAAC,QAAA,EAAC,SAAO,CAAC3B,KAAK,CAAC4B,OAAO,EAAM,CAAC,CAC9E,CAEA,GAAI,CAAC9B,cAAc,CAAE,CACnB,mBAAON,IAAA,QAAKkC,SAAS,CAAC,2BAA2B,CAAAC,QAAA,CAAC,2BAAyB,CAAK,CAAC,CACnF,CAEA,mBACErC,KAAA,QAAKoC,SAAS,CAAC,6BAA6B,CAAAC,QAAA,eAC1CrC,KAAA,OAAAqC,QAAA,EAAI,sBAAoB,CAAC9B,YAAY,EAAK,CAAC,cAC3CP,KAAA,MAAAqC,QAAA,eAAGnC,IAAA,WAAAmC,QAAA,CAAQ,aAAW,CAAQ,CAAC,IAAC,CAAC7B,cAAc,CAAC+B,UAAU,EAAI,CAAC,cAC/DvC,KAAA,MAAAqC,QAAA,eAAGnC,IAAA,WAAAmC,QAAA,CAAQ,UAAQ,CAAQ,CAAC,IAAC,CAAC7B,cAAc,CAACgC,OAAO,EAAI,CAAC,cACzDxC,KAAA,MAAAqC,QAAA,eAAGnC,IAAA,WAAAmC,QAAA,CAAQ,WAAS,CAAQ,CAAC,IAAC,CAAC7B,cAAc,CAACiC,QAAQ,EAAI,CAAC,cAC3DzC,KAAA,MAAAqC,QAAA,eAAGnC,IAAA,WAAAmC,QAAA,CAAQ,SAAO,CAAQ,CAAC,IAAC,CAAC7B,cAAc,CAACe,MAAM,EAAI,CAAC,cACvDvB,KAAA,MAAAqC,QAAA,eAAGnC,IAAA,WAAAmC,QAAA,CAAQ,YAAU,CAAQ,CAAC,IAAC,CAAC,GAAI,CAAAK,IAAI,CAAClC,cAAc,CAACmC,SAAS,CAAC,CAACC,cAAc,CAAC,CAAC,EAAI,CAAC,cAExF1C,IAAA,OAAAmC,QAAA,CAAI,OAAK,CAAI,CAAC,cACdnC,IAAA,QAAKkC,SAAS,CAAC,8BAA8B,CAAAC,QAAA,cAC3CnC,IAAA,SAAAmC,QAAA,CAAO7B,cAAc,CAACqC,IAAI,CAAO,CAAC,CAC/B,CAAC,cAEN3C,IAAA,OAAAmC,QAAA,CAAI,eAAa,CAAI,CAAC,CACrB7B,cAAc,CAACoB,YAAY,EAAIpB,cAAc,CAACoB,YAAY,CAACkB,MAAM,CAAG,CAAC,cACpE5C,IAAA,OAAIkC,SAAS,CAAC,qCAAqC,CAAAC,QAAA,CAChD7B,cAAc,CAACoB,YAAY,CAACmB,GAAG,CAAC,CAACC,UAAU,CAAEC,KAAK,gBACjDjD,KAAA,OAAgBoC,SAAS,CAAC,0CAA0C,CAAAC,QAAA,eAClErC,KAAA,QAAKoC,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/BrC,KAAA,MAAAqC,QAAA,eAAGrC,KAAA,WAAAqC,QAAA,EAAQ,YAAU,CAACW,UAAU,CAACjB,gBAAgB,CAAC,GAAC,EAAQ,CAAC,IAAC,CAACiB,UAAU,CAACzB,MAAM,EAAI,CAAC,cACpFrB,IAAA,WAAQgD,OAAO,CAAEA,CAAA,GAAMlB,cAAc,CAACgB,UAAU,CAACjB,gBAAgB,CAAE,CAACK,SAAS,CAAC,yBAAyB,CAAAC,QAAA,CACpGzB,iBAAiB,CAACoC,UAAU,CAACjB,gBAAgB,CAAC,CAAG,UAAU,CAAG,QAAQ,CACjE,CAAC,EACN,CAAC,CACLnB,iBAAiB,CAACoC,UAAU,CAACjB,gBAAgB,CAAC,eAC7C/B,KAAA,QAAKoC,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAChCrC,KAAA,MAAAqC,QAAA,eAAGnC,IAAA,WAAAmC,QAAA,CAAQ,UAAQ,CAAQ,CAAC,IAAC,CAACW,UAAU,CAACV,OAAO,EAAI,CAAC,cACrDtC,KAAA,MAAAqC,QAAA,eAAGnC,IAAA,WAAAmC,QAAA,CAAQ,iBAAe,CAAQ,CAAC,IAAC,CAACW,UAAU,CAACG,cAAc,CAAC,IAAE,EAAG,CAAC,cACrEnD,KAAA,MAAAqC,QAAA,eAAGnC,IAAA,WAAAmC,QAAA,CAAQ,eAAa,CAAQ,CAAC,IAAC,CAACW,UAAU,CAACI,YAAY,CAAC,KAAG,EAAG,CAAC,cAClEpD,KAAA,MAAAqC,QAAA,eAAGnC,IAAA,WAAAmC,QAAA,CAAQ,kBAAgB,CAAQ,CAAC,IAAC,cAAAnC,IAAA,QAAAmC,QAAA,CAAMW,UAAU,CAACK,eAAe,CAAM,CAAC,EAAG,CAAC,cAChFrD,KAAA,MAAAqC,QAAA,eAAGnC,IAAA,WAAAmC,QAAA,CAAQ,gBAAc,CAAQ,CAAC,IAAC,cAAAnC,IAAA,QAAAmC,QAAA,CAAMW,UAAU,CAACM,aAAa,CAAM,CAAC,EAAG,CAAC,EACzE,CACN,GAfML,KAgBL,CACL,CAAC,CACA,CAAC,cAEL/C,IAAA,MAAAmC,QAAA,CAAG,4BAA0B,CAAG,CACjC,EACE,CAAC,CAEV,CAEA,cAAe,CAAAlC,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}